
*$py.class
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
build/
# Byte-compiled / optimized / DLL files
.cache
celerybeat.pid
celerybeat-schedule
# Celery stuff
# C extensions
*.code-workspace
#   commonly ignored for libraries.
*.cover
cover/
.coverage
.coverage.*
coverage.xml
cython_debug/
# Cython debug symbols
db.sqlite3
db.sqlite3-journal
develop-eggs/
dist/
# Distribution / packaging
# Django stuff:
.dmypy.json
dmypy.json
docs/_build/
downloads/
*.egg
*.egg-info/
.eggs/
eggs/
.env
env/
ENV/
env.bak/
# Environments
# Flask stuff:
#   For a library or package, you might want to ignore these files since the code is
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
htmlcov/
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
.hypothesis/
#.idea/
#   install all needed dependencies.
.installed.cfg
# Installer logs
instance/
#   intended to run in multiple environments; otherwise, check them in:
.ipynb_checkpoints
# IPython
ipython_config.py
#  JetBrains specific template is maintainted in a separate JetBrains.gitignore that can
*.json
# Jupyter Notebook
launch.json
lib/
lib64/
local_settings.py
*.log
*.manifest
MANIFEST
# mkdocs documentation
*.mo
# mypy
.mypy_cache/
nosetests.xml
.nox/
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
parts/
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
pip-delete-this-directory.txt
# pipenv
#Pipfile.lock
pip-log.txt
pip_search/*.txt
pip_search/*.vscode
pip_search/.vscode/*
pip_search/.vscode/launch.json
# poetry
#poetry.lock
*.pot
profile_default/
.pybuilder/
# PyBuilder
__pycache__/
# PyCharm
*.py[cod]
*.py,cover
# pyenv
# PyInstaller
__pypackages__/
.pyre/
# Pyre type checker
.pytest_cache/
.Python
# .python-version
.pytype/
# pytype static type analyzer
.ropeproject
# Rope project settings
# SageMath parsed files
*.sage.py
.scrapy
# Scrapy stuff:
sdist/
share/python-wheels/
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
/site
*.so
*.spec
# Sphinx documentation
.spyderproject
# Spyder project settings
.spyproject
target/
#   This is especially recommended for binary packages to ensure reproducibility, and is more
.tox/
# Translations
*.txt
# Unit test / coverage reports
#  Usually these files are written by a python script from a template
var/
.venv
venv/
venv.bak/
*.vscode/*
.vscode/*
.vscode/**
# !.vscode/extensions.json
# VS Code files for those working on multiple tools
# !.vscode/launch.json
# .vscode/launch.json
# !.vscode/settings.json
# !.vscode/tasks.json
.webassets-cache
wheels/
